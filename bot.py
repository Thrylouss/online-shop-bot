from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import requests
import config

# –°—Ç–∞—Ä—Ç: –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("–†—É—Å—Å–∫–∏–π"), KeyboardButton("O‚Äòzbekcha")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)

    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang:",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
async def choose_language(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = update.message.text.strip()
    if lang not in ["–†—É—Å—Å–∫–∏–π", "O‚Äòzbekcha"]:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.")
        return

    context.user_data["lang"] = "ru" if lang == "–†—É—Å—Å–∫–∏–π" else "uz"

    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    contact_button = KeyboardButton(
        "üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" if lang == "–†—É—Å—Å–∫–∏–π" else "üì± Telefon raqamini yuborish",
        request_contact=True
    )
    reply_markup = ReplyKeyboardMarkup([[contact_button]], resize_keyboard=True, one_time_keyboard=True)

    msg = (
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞." if lang == "–†—É—Å—Å–∫–∏–π"
        else "Iltimos, telefon raqamingizni yuborish uchun quyidagi tugmani bosing."
    )
    await update.message.reply_text(msg, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
async def handle_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    phone = update.message.contact.phone_number
    lang = context.user_data.get("lang", "ru")

    try:
        response = requests.post(config.VERIFY_API_URL, json={"username": phone})
        data = response.json()

        if "code" in data:
            msg = {
                "ru": f"–ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –∫–æ–¥ –º–µ–Ω—è–µ—Ç—Å—è.\n–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {data['code']}",
                "uz": f"Har 5 daqiqada kod yangilanadi.\nKod yuborildi: {data['code']}"
            }[lang]
            await update.message.reply_text(msg)
        elif "detail" in data:
            await update.message.reply_text(data["detail"])
        elif isinstance(data, list):
            await update.message.reply_text(data[0])
        else:
            await update.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞." if lang == "ru" else "Noma ºlum server javobi.")
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞: {e}" if lang == "ru" else f"Xatolik: {e}")

# –ó–∞–ø—Ä–µ—Ç –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
async def reject_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = context.user_data.get("lang", "ru")
    msg = {
        "ru": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±.",
        "uz": "Iltimos, raqam yuborish uchun faqat tugmadan foydalaning üì±."
    }[lang]
    await update.message.reply_text(msg)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
def create_bot():
    app = ApplicationBuilder().token(config.BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.Regex("^(–†—É—Å—Å–∫–∏–π|O‚Äòzbekcha)$"), choose_language))
    app.add_handler(MessageHandler(filters.CONTACT, handle_contact))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, reject_text))

    return app